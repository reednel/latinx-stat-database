"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Obfuscate = function Obfuscate(props) {
  var element = props.element,
      children = props.children,
      tel = props.tel,
      sms = props.sms,
      facetime = props.facetime,
      email = props.email,
      href = props.href,
      headers = props.headers,
      obfuscate = props.obfuscate,
      obfuscateChildren = props.obfuscateChildren,
      linkText = props.linkText,
      style = props.style,
      onClick = props.onClick,
      others = _objectWithoutProperties(props, ["element", "children", "tel", "sms", "facetime", "email", "href", "headers", "obfuscate", "obfuscateChildren", "linkText", "style", "onClick"]);

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      humanInteraction = _useState2[0],
      setHumanInteraction = _useState2[1];

  var linkProps = children || tel || sms || facetime || email || href;
  var Component = element;

  var generateLink = function generateLink() {
    var link; // Combine email header parameters for use with email

    var combineHeaders = function combineHeaders(params) {
      return Object.keys(params).map(function (key) {
        return "".concat(key, "=").concat(encodeURIComponent(params[key]));
      }).join('&');
    };

    if (email) {
      link = "mailto:".concat(email);

      if (headers) {
        link += "?".concat(combineHeaders(headers));
      }
    } else if (tel) {
      link = "tel:".concat(tel);
    } else if (sms) {
      link = "sms:".concat(sms);
    } else if (facetime) {
      link = "facetime:".concat(facetime);
    } else if (href) {
      link = href;
    } else if (_typeof(children) !== 'object') {
      link = children;
    } else {
      return '';
    }

    return link;
  };

  var handleClick = function handleClick() {
    // Allow instantiator to provide an onClick method to be called
    // before we change location (e.g. for analytics tracking)
    if (onClick && typeof onClick === 'function') {
      onClick();
    } // If focused or hovered, this js will be skipped with preference for html


    if (humanInteraction === false) {
      window.location.href = generateLink({
        email: email,
        headers: headers,
        tel: tel,
        sms: sms,
        facetime: facetime,
        href: href,
        children: children
      });
    }
  };

  var reverse = function reverse(content) {
    return typeof content !== 'undefined' && content.split('').reverse().join('').replace('(', ')').replace(')', '(');
  };

  var obfuscatedStyle = _objectSpread(_objectSpread({}, style), {}, {
    unicodeBidi: 'bidi-override',
    direction: humanInteraction === true || obfuscate === false || obfuscateChildren === false ? 'ltr' : 'rtl'
  });

  var renderedLink = humanInteraction === true || obfuscate === false || _typeof(children) === 'object' || obfuscateChildren === false // Allow child elements
  ? linkProps : reverse(linkProps);
  var clickProps = Component === 'a' ? {
    href: humanInteraction === true || obfuscate === false ? generateLink() : linkText || 'obfuscated',
    onClick: handleClick
  } : {};
  return /*#__PURE__*/_react["default"].createElement(Component, _extends({
    onFocus: function onFocus() {
      return setHumanInteraction(true);
    },
    onMouseOver: function onMouseOver() {
      return setHumanInteraction(true);
    },
    onContextMenu: function onContextMenu() {
      return setHumanInteraction(true);
    }
  }, others, clickProps, {
    style: obfuscatedStyle
  }), renderedLink);
};

Obfuscate.propTypes = {
  element: _propTypes["default"].string,
  children: _propTypes["default"].node,
  tel: _propTypes["default"].string,
  sms: _propTypes["default"].string,
  facetime: _propTypes["default"].string,
  email: _propTypes["default"].string,
  href: _propTypes["default"].string,
  headers: _propTypes["default"].shape({}),
  obfuscate: _propTypes["default"].bool,
  obfuscateChildren: _propTypes["default"].bool,
  linkText: _propTypes["default"].string,
  style: _propTypes["default"].shape({}),
  onClick: _propTypes["default"].func
};
Obfuscate.defaultProps = {
  element: 'a',
  children: undefined,
  tel: undefined,
  sms: undefined,
  facetime: undefined,
  email: undefined,
  href: undefined,
  headers: undefined,
  obfuscate: undefined,
  obfuscateChildren: undefined,
  linkText: undefined,
  style: {},
  onClick: undefined
};
var _default = Obfuscate;
exports["default"] = _default;